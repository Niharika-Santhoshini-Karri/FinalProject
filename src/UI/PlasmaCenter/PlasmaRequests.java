/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI.PlasmaCenter;
import DBUTIL.DBUTIL;
import MODEL.Validations;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import java.sql.Statement;
import MODEL.PlasmaCenter;

/**
 *
 * @author 91918
 */
public class PlasmaRequests extends javax.swing.JFrame {

    /**
     * Creates new form PlasmaRequests
     */
    Validations validations;
    ResultSet resultSet, resultSet1, resultSet2, resultSetx = null;
    DBUTIL dbconn= new DBUTIL();
    public static int thispc_id = PlasmaCenter.getPc_id(); 
    
    
    
    public PlasmaRequests() {
        initComponents();
        populateTable();
        updateCombox(); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblPlasmaRequests = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();
        comboxStock_id = new javax.swing.JComboBox<>();
        btnBack = new javax.swing.JButton();
        lblStockID = new javax.swing.JLabel();
        cmbStatus1 = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        tblPlasmaRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Req ID", "HOSPITAL ID", "Quantity", "Status", "Blood group"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblPlasmaRequests);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(65, 119, 713, 162);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("PLASMA REQUESTS");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(92, 48, 270, 22);

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        getContentPane().add(btnUpdate);
        btnUpdate.setBounds(320, 410, 140, 23);

        lblStatus.setText("Status");
        getContentPane().add(lblStatus);
        lblStatus.setBounds(90, 310, 70, 17);

        getContentPane().add(comboxStock_id);
        comboxStock_id.setBounds(520, 310, 124, 23);

        btnBack.setText("BACK");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });
        getContentPane().add(btnBack);
        btnBack.setBounds(830, 24, 100, 23);

        lblStockID.setText("STOCK ID");
        getContentPane().add(lblStockID);
        lblStockID.setBounds(400, 310, 110, 17);

        cmbStatus1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "On Transit", "Pending", " " }));
        getContentPane().add(cmbStatus1);
        cmbStatus1.setBounds(161, 307, 95, 23);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
    int SelectedRowIndex=tblPlasmaRequests.getSelectedRow();
        if(SelectedRowIndex<0)
        {
         JOptionPane.showMessageDialog(this, "Please select a row to update");
            
        return;
        }
        DefaultTableModel model =(DefaultTableModel) tblPlasmaRequests.getModel();
        Connection conn = dbconn.getConnection();
        
        PreparedStatement stmt1, stmt2, stmt3; 
      
         String request_id = model.getValueAt(tblPlasmaRequests.getSelectedRow(),0).toString();
         int req_id = Integer.valueOf(request_id); 
         
         String sstock_id = (String) comboxStock_id.getSelectedItem(); 
         int stock_id = Integer.valueOf(sstock_id);
         
         String stockavailable = "select s.quantity, d.blood_group from all_stock s join vdonor d on s.vdonor_id = d.vdonor_id where s.stock_id = ?";
         
         String findhosrequests = "select qty, blood_group from hpcrequest where request_id =?"; 
         
         
        String updateStatus = "update HPCRequest set status=?, stock_id=? where request_id=? ";
        
        String status = (String) comboxStock_id.getSelectedItem(); 

        
        try
        {
            
            stmt3 = conn.prepareStatement(updateStatus);
            stmt3.setString(1,status);
            stmt3.setInt(2, stock_id);
            stmt3.setInt(3,req_id);
            
            stmt1 = conn.prepareStatement(findhosrequests);
            stmt1.setInt(1,req_id);
            
            
            int hosqty=2, stockqty = 1; 
            String hosBlood="x", stockBlood="y"; 
            
            resultSet1 = stmt1.executeQuery();
            while(resultSet1.next())
            {
                hosqty  = resultSet1.getInt(1); 
                hosBlood = resultSet1.getString(2);
            }
            
            
            stmt2 = conn.prepareStatement(stockavailable);
            stmt2.setInt(1,stock_id);
            resultSet2 = stmt2.executeQuery();
            
            while(resultSet2.next())
            {
              stockqty  = resultSet2.getInt(1); 
              stockBlood = resultSet2.getString(2);  
            }
            if(hosqty==stockqty && (hosBlood).equals(stockBlood))
            {
                stmt3.executeQuery();
                JOptionPane.showMessageDialog(this,"Status Updated");
            }
            else
            {
               
                JOptionPane.showMessageDialog(this,"This stock doesnt suit this request!");
                return; 
               
            }
            
            
        }
        catch (SQLException ex)
        {
            Logger.getLogger(PlasmaRequests.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
      
      
      populateTable();
        
        // TODO add your handling code here:
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        this.hide();
        PCWorkArea frame = new PCWorkArea();
        frame.setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PlasmaRequests.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PlasmaRequests.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PlasmaRequests.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PlasmaRequests.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PlasmaRequests().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbStatus1;
    private javax.swing.JComboBox<String> comboxStock_id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JLabel lblStockID;
    private javax.swing.JTable tblPlasmaRequests;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblPlasmaRequests.getModel();
         Connection conn = dbconn.getConnection();
        model.setRowCount(0);
 String selectSql ="select r.request_id , d.hos_id , r.qty, r.status, r.blood_group from hpcrequest r inner join patients p on r.pat_id = p.pat_id inner join doctors d on p.doc_id = d.doc_id ";
    
      Statement stmt;
       try {
            stmt = conn.createStatement();
       
            resultSet = stmt.executeQuery(selectSql);
            resultSet.next();

             while (resultSet.next()) {
            
            Object[] row = new Object[5];
            row[0]=resultSet.getInt(1);
            row[1] = resultSet.getInt(2);
            row[2] = resultSet.getInt(3);
            row[3]=resultSet.getString(4);
            row[4]=resultSet.getString(5);
            
            
            
            model.addRow(row);
             }
             
            
             conn.close();
             
       }
       catch (SQLException ex) {
            Logger.getLogger(PlasmaRequests.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void updateCombox() {
        Connection conn = dbconn.getConnection();
        
        String SELECTSQL2 = "SELECT stock_id FROM all_stock where pc_id =?";

        PreparedStatement stmt2; 
        try
        {
            
            stmt2 = conn.prepareStatement(SELECTSQL2);
            stmt2.setInt(1,thispc_id); 
            
            resultSetx = stmt2.executeQuery(); 
            
            
            
            while(resultSetx.next())
            {
                comboxStock_id.addItem(resultSetx.getString(1));
            }
       
             
            
        }
        catch (SQLException ex)
        {
            Logger.getLogger(PlasmaRequests.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
}
