/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI.PlasmaCenter;

import DBUTIL.DBUTIL;
import MODEL.PlasmaCenter; 
import static UI.PlasmaCenter.PlasmaRequests.thispc_id;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aish
 */
public class RequestToNGO extends javax.swing.JFrame {

    /**
     * Creates new form RequestToNGO
     */
    ResultSet resultSet1, resultSet2= null;
     Random rand = new Random();
    DBUTIL dbconn= new DBUTIL();
     
     public static int thispc_id = PlasmaCenter.getPc_id(); 
     
     
    public RequestToNGO() {
        initComponents();
        updateCombox(); 
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comboxQty = new javax.swing.JComboBox<>();
        comboxBlood = new javax.swing.JComboBox<>();
        comboxstatuscode = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        comboxNGO = new javax.swing.JComboBox<>();
        btnRaise = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("NGO ID");

        jLabel2.setText("Blood Group");

        comboxQty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));

        comboxBlood.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "O+", "O-", "AB+", "AB-", "A+", "A-", "B+", "B-" }));

        comboxstatuscode.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "URGENT REQUEST ", "SERIOUS REQUEST" }));
        comboxstatuscode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboxstatuscodeActionPerformed(evt);
            }
        });

        jLabel3.setText("Quantity");

        jLabel4.setText("Status");

        btnRaise.setText("RAISE REQUEST");
        btnRaise.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRaiseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(jLabel2)
                        .addGap(161, 161, 161)
                        .addComponent(comboxBlood, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(103, 103, 103)
                                .addComponent(comboxstatuscode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(175, 175, 175)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboxNGO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboxQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(351, 351, 351)
                        .addComponent(btnRaise)))
                .addContainerGap(259, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comboxBlood, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboxQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(comboxNGO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(comboxstatuscode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addComponent(btnRaise)
                .addContainerGap(123, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboxstatuscodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboxstatuscodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboxstatuscodeActionPerformed

    private void btnRaiseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRaiseActionPerformed
        
        Connection conn = dbconn.getConnection();
        
        int req_id = rand.nextInt(200,1000); 
        String blood_group = (String) comboxBlood.getSelectedItem(); 
            String sqty = (String) comboxQty.getSelectedItem(); 
        int qty = Integer.valueOf(sqty); 
        
            String sngo = (String) comboxNGO.getSelectedItem(); 
        int ngo_id = Integer.valueOf(sngo); 
        
        String status = (String) comboxstatuscode.getSelectedItem(); 
        
        String insertsql = "insert into pcngorequest(req_id,pc_id,ngo_id, blood_group, qty,status) values (?,?,?,?,?,?)";
        
        PreparedStatement stmt1; 
        try
        {
            stmt1 = conn.prepareStatement(insertsql);
            stmt1.setInt(1, req_id);
            stmt1.setInt(2, thispc_id);
            stmt1.setInt(3, ngo_id);
            stmt1.setString(4, blood_group);
             stmt1.setInt(5,qty);
            stmt1.setString(6, status);
            
            
            
            stmt1.executeQuery();
            JOptionPane.showMessageDialog(this,"Request Raised");
           
        }
        catch (SQLException ex)
        {
            Logger.getLogger(RequestToNGO.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
                
    }//GEN-LAST:event_btnRaiseActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RequestToNGO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RequestToNGO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RequestToNGO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RequestToNGO.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RequestToNGO().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnRaise;
    private javax.swing.JComboBox<String> comboxBlood;
    private javax.swing.JComboBox<String> comboxNGO;
    private javax.swing.JComboBox<String> comboxQty;
    private javax.swing.JComboBox<String> comboxstatuscode;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables

    private void updateCombox() {
       Connection conn = dbconn.getConnection();
        String SELECTSQL1 = "select NGO_id from ngo";
       
        PreparedStatement stmt1; 
        try
        {
            stmt1 = conn.prepareStatement(SELECTSQL1);
             resultSet2 = stmt1.executeQuery();
           
            while(resultSet2.next())
            {
                comboxNGO.addItem(resultSet2.getString(1));
            }
        }
        catch (SQLException ex)
        {
            Logger.getLogger(RequestToNGO.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

   
}
